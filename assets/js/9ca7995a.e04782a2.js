"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1996],{99012:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=a(85893),n=a(11151);const o={sidebar_position:2},r="Integration tests",i={id:"testing/integration-testing",title:"Integration tests",description:"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.",source:"@site/docs/testing/integration-testing.md",sourceDirName:"testing",slug:"/testing/integration-testing",permalink:"/project-blastpad/docs/testing/integration-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2024-Spring/project-blastpad/edit/main/documentation/docs/testing/integration-testing.md",tags:[],version:"current",lastUpdatedBy:"Jeffin Johnykutty",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Unit tests",permalink:"/project-blastpad/docs/testing/unit-testing"},next:{title:"Acceptance test",permalink:"/project-blastpad/docs/testing/acceptence-testing"}},c={},l=[{value:"Integration Test for use case 7",id:"integration-test-for-use-case-7",level:2},{value:"Integration Test for use case 8",id:"integration-test-for-use-case-8",level:2},{value:"Integration Test for use case 9",id:"integration-test-for-use-case-9",level:2},{value:"Integration Test for use case 10",id:"integration-test-for-use-case-10",level:2}];function d(e){const t={h1:"h1",h2:"h2",p:"p",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"integration-tests",children:"Integration tests"}),"\n",(0,s.jsx)(t.p,{children:"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results."}),"\n",(0,s.jsx)(t.h2,{id:"integration-test-for-use-case-7",children:"Integration Test for use case 7"}),"\n",(0,s.jsx)(t.p,{children:"A user would like to view their classmate's games and play one."}),"\n",(0,s.jsx)(t.p,{children:"Stubbed functional units: ClassroomManager, example database with classrooms, BlocklyCompiler"}),"\n",(0,s.jsx)(t.p,{children:"\u2022   Verify that ClassroomManager can initialize correctly\n\u2022   Verify that ClassroomManager can communicate with the example database\n\u2022   Verify that ClassroomManager returns classrooms from the example database when viewClassrooms() is called\n\u2022   Verify that ClassroomManager can view the games stored inside one of the returned classrooms\n\u2022   Verify that BlocklyCompiler can compile one of the games stored in the classroom"}),"\n",(0,s.jsx)(t.h2,{id:"integration-test-for-use-case-8",children:"Integration Test for use case 8"}),"\n",(0,s.jsx)(t.p,{children:"A user would like to upload a game to a Classroom"}),"\n",(0,s.jsx)(t.p,{children:"Stubbed functional units: ClassroomManager, example database with classrooms"}),"\n",(0,s.jsx)(t.p,{children:"\u2022   Verify that ClassroomManager can initialize correctly\n\u2022   Verify that ClassroomManager can communicate with the example database\n\u2022   Verify that ClassroomManager can call a classroom's uploadGame() method"}),"\n",(0,s.jsx)(t.h2,{id:"integration-test-for-use-case-9",children:"Integration Test for use case 9"}),"\n",(0,s.jsx)(t.p,{children:"A user/teacher would like to a create a classroom to host BlastPad projects for students"}),"\n",(0,s.jsx)(t.p,{children:"Stubbed functional units: BlastPad website, example database with classrooms"}),"\n",(0,s.jsx)(t.p,{children:"\u2022   Verify that a classroom can be added to the example database with a query.\n\u2022   Verify that a shortlink to the classroom can be generated."}),"\n",(0,s.jsx)(t.h2,{id:"integration-test-for-use-case-10",children:"Integration Test for use case 10"}),"\n",(0,s.jsx)(t.p,{children:"A user/teacher would like to approve an uploaded game to be visible in the Classroom"}),"\n",(0,s.jsx)(t.p,{children:"Stubbed functional units: BlastPad website, example database with classrooms"}),"\n",(0,s.jsx)(t.p,{children:"\u2022   Verify that a classroom's games can be retrieved from the example database with a query.\n\u2022   Verify that a game in a pending state can be filtered from a list of retrieved games.\n\u2022   Verify that this game can be downloaded from the database with a query.\n\u2022   Verify that the game's pending state can be changed to an approved state with a query."})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,a)=>{a.d(t,{Z:()=>i,a:()=>r});var s=a(67294);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);